#!/usr/bin/perl

use strict;
use warnings;
use Anvil::Tools;

my $anvil = Anvil::Tools->new();

=head2 network_scan

Scans a subnet using nmap and prints the results to stdout in CSV format.

=head2 Parameters;

=head3 subnet

The first two octets of an IP address.

Example: "10.20"

=cut
sub network_scan {
  my $parameter = shift;
  my $subnet = defined $parameter->{subnet} ? $parameter->{subnet} : "";

  print "Scanning devices...\n\n";
  $anvil->NetworkScan->scan({subnet => $subnet});

  print "IP,MAC,OEM\n";

  foreach my $this_ip (sort {$a cmp $b} keys %{$anvil->data->{scan}{ip}})
  {
    my $mac = $anvil->data->{scan}{ip}{$this_ip}{mac};
    my $oem = $anvil->data->{scan}{ip}{$this_ip}{oem};
    print "$this_ip,$mac,$oem\n";
  }

  #print "Saving Scan Results to the Database.\n";
  #$anvil->NetworkScan->save_scan_to_db();

  print "Scan Completed.\n";
}

$anvil->Get->switches();
my $subnet = defined $anvil->data->{switches}{subnet} ? $anvil->data->{switches}{subnet} : "";

if ($> != 0) {
  print("Command must be run as root\n");
} else {
  if ($subnet && $subnet =~ /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/(?:1[2-9]|2[0-9]|30)$/) {
    network_scan({subnet => $subnet});
  } else {
    print("Invalid IP or CIDR value\n");
    print("Usage: sudo /usr/sbin/striker-network-scan --subnet=10.20.0.0/16\n");
  }
}

exit(0);
